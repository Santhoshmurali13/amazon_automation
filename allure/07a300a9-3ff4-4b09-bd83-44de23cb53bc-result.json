{"name": "test_amazon_application", "status": "broken", "statusDetails": {"message": "TypeError: argument of type 'NoneType' is not iterable", "trace": "self = <validate_amazon_functionality_test.Testamazon object at 0x00000138A05DFEF0>\nreadJson = {'amazon_URL': 'https://www.amazon.in/gp/css/homepage.html?ref_=nav_youraccount_btn', 'password': 'Santhu@1996', 'payment_type': 'Cash on Delivery/Pay on Delivery', 'serach_item': 'shoes', ...}\n\n    def test_amazon_application(self, readJson):\n        Login = LoginPage(self.driver)\n        Login.launch_the_app(readJson['amazon_URL'])\n        Login.login_application(readJson[\"username\"], readJson[\"password\"])\n        Home = HomePage(self.driver)\n        Home.search_for_item(readJson['serach_item'])\n        Home.add_to_cart()\n        Cart = CartPage(self.driver)\n        Cart.click_on_cart()\n        Cart.click_on_pay()\n        Payment = PaymentPage(self.driver)\n>       Payment.click_on_payment(readJson['payment_type'])\n\ntest\\validate_amazon_functionality_test.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <page_object.payment_page.PaymentPage object at 0x00000138A09FE5A0>\npayment_type = 'Cash on Delivery/Pay on Delivery'\n\n    def click_on_payment(self, payment_type):\n        self.driver.find_element(*locators[\"DELIVERY_ADDRESS\"]).is_displayed()\n        time.sleep(2)\n        self.driver.find_element(*locators[\"CONFIRM_ADDRESS\"]).click()\n        time.sleep(3)\n        self.driver.find_element(*locators[\"CHECK_PAYMENT\"]).click()\n        actual_text = self.driver.find_element(*locators[\"PAYMENT_TYPE\"]).get_attribute(\"text\")\n>       if payment_type in actual_text:\nE       TypeError: argument of type 'NoneType' is not iterable\n\npage_object\\payment_page.py:24: TypeError"}, "attachments": [{"name": "stdout", "source": "ad2e9f26-8425-495f-b249-2eeed06b994c-attachment.txt", "type": "text/plain"}], "start": 1733902811439, "stop": 1733902933272, "uuid": "7f1aa2db-76d1-4520-9955-5d7c2f9c740c", "historyId": "047ce53c77df55e8db95ed86678fa69e", "testCaseId": "047ce53c77df55e8db95ed86678fa69e", "fullName": "test.validate_amazon_functionality_test.Testamazon#test_amazon_application", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('browser_cbt')"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "validate_amazon_functionality_test"}, {"name": "subSuite", "value": "Testamazon"}, {"name": "host", "value": "Santhosh-1422"}, {"name": "thread", "value": "20256-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.validate_amazon_functionality_test"}]}