{"name": "test_amazon_application", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//button[@id='a-autoid-3-announce'])[2]\"}\n  (Session info: MicrosoftEdge=131.0.2903.51); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\t(No symbol) [0x00007FF75A786B05]\n\tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF75AAAF474+1437348]\n\tsqlite3_dbdata_init [0x00007FF75AB52DA6+643174]\n\t(No symbol) [0x00007FF75A6AC9DB]\n\t(No symbol) [0x00007FF75A6ACAE3]\n\t(No symbol) [0x00007FF75A6E92F7]\n\t(No symbol) [0x00007FF75A6CC1DF]\n\t(No symbol) [0x00007FF75A6A3437]\n\t(No symbol) [0x00007FF75A6E6BFF]\n\t(No symbol) [0x00007FF75A6CBE03]\n\t(No symbol) [0x00007FF75A6A2984]\n\t(No symbol) [0x00007FF75A6A1E30]\n\t(No symbol) [0x00007FF75A6A2571]\n\tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF75AA5BB04+1094964]\n\t(No symbol) [0x00007FF75A7C32B8]\n\tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF75AA5AF43+1091955]\n\tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF75AA5AAA9+1090777]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF75A860CB1+461569]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF75A85C9D4+444452]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF75A85CB19+444777]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF75A852196+401382]\n\tBaseThreadInitThunk [0x00007FFBE4AC7374+20]\n\tRtlUserThreadStart [0x00007FFBE535CC91+33]", "trace": "self = <validate_amazon_functionality_test.Testamazon object at 0x000001E9857DFEF0>\nreadJson = {'amazon_URL': 'https://www.amazon.in/gp/css/homepage.html?ref_=nav_youraccount_btn', 'item_to_add': 'Red Tape', 'password': 'Santhu@1996', 'serach_item': 'shoes', ...}\n\n    def test_amazon_application(self, readJson):\n        Login = LoginPage(self.driver)\n        Login.launch_the_app(readJson['amazon_URL'])\n        Login.login_application(readJson[\"username\"], readJson[\"password\"])\n        Home = HomePage(self.driver)\n        Home.search_for_item(readJson['serach_item'])\n>       Home.add_to_cart(readJson['item_to_add'])\n\ntest\\validate_amazon_functionality_test.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\home_page.py:34: in add_to_cart\n    Add_Cart = self.driver.find_element(locators[\"ADD_TO_CART_BUTTON\"][0], locators[\"ADD_TO_CART_BUTTON\"][1].format(str(index)))\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001E98807AE10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...852196+401382]\\\\n\\\\tBaseThreadInitThunk [0x00007FFBE4AC7374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFBE535CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//button[@id='a-autoid-3-announce'])[2]\"}\nE         (Session info: MicrosoftEdge=131.0.2903.51); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \t(No symbol) [0x00007FF75A786B05]\nE       \tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF75AAAF474+1437348]\nE       \tsqlite3_dbdata_init [0x00007FF75AB52DA6+643174]\nE       \t(No symbol) [0x00007FF75A6AC9DB]\nE       \t(No symbol) [0x00007FF75A6ACAE3]\nE       \t(No symbol) [0x00007FF75A6E92F7]\nE       \t(No symbol) [0x00007FF75A6CC1DF]\nE       \t(No symbol) [0x00007FF75A6A3437]\nE       \t(No symbol) [0x00007FF75A6E6BFF]\nE       \t(No symbol) [0x00007FF75A6CBE03]\nE       \t(No symbol) [0x00007FF75A6A2984]\nE       \t(No symbol) [0x00007FF75A6A1E30]\nE       \t(No symbol) [0x00007FF75A6A2571]\nE       \tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF75AA5BB04+1094964]\nE       \t(No symbol) [0x00007FF75A7C32B8]\nE       \tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF75AA5AF43+1091955]\nE       \tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF75AA5AAA9+1090777]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF75A860CB1+461569]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF75A85C9D4+444452]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF75A85CB19+444777]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF75A852196+401382]\nE       \tBaseThreadInitThunk [0x00007FFBE4AC7374+20]\nE       \tRtlUserThreadStart [0x00007FFBE535CC91+33]\n\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "stdout", "source": "0a12cc78-a577-42fa-b38b-14be2182c633-attachment.txt", "type": "text/plain"}], "start": 1733895179751, "stop": 1733895237498, "uuid": "25bb9e55-4f6d-4864-aee2-0f8726798527", "historyId": "047ce53c77df55e8db95ed86678fa69e", "testCaseId": "047ce53c77df55e8db95ed86678fa69e", "fullName": "test.validate_amazon_functionality_test.Testamazon#test_amazon_application", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('browser_cbt')"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "validate_amazon_functionality_test"}, {"name": "subSuite", "value": "Testamazon"}, {"name": "host", "value": "Santhosh-1422"}, {"name": "thread", "value": "9496-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.validate_amazon_functionality_test"}]}